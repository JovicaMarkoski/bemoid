////
/// @group Segment
/// @define segment
////

/// Collection of the segments variants.
///
/// @type {Map}
/// @prop {Map} xsmall
/// @prop {Map} medium
/// @prop {Map} large
/// @prop {Map} xlarge
$segments-sizes: (
    xsmall: ('padding': 0),
    medium: ('padding': get-space(large)),
    large: ('padding': get-space(large) get-space(xlarge)),
    xlarge: ('padding': get-space(xxlarge)),
) !default;

/// Default segment size.
///
/// @type {Keyword}
$segment-size: medium !default;

// Segment
//
// Desc
//
// .segment--xsmall - Desc
// .segment--large - Desc
// .segment--xlarge - Desc
//
// Markup: segment.html
//
// Style guide: Structures.Segment
.segment {
    $size: map-get($segments-sizes, $segment-size);

    @include declarations($size);

    width: 100%;
    display: block;

    @each $size, $declarations in $segments-sizes {
        @if $size != $segment-size {
            &--#{$size} {
                @include declarations($declarations);
            }
        }
    }
}