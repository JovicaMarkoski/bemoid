/** @define container */

@import 'variables';

// Container
//
// General element to be used as wrapper for other components. Its purpose is to limit the spreading of internal components to a certain width.
//
// .container--small    - Small width. Extends up to `small` breakpoint.
// .container--medium   - Medium width. Extends up to `medium` breakpoint.
// .container--large    - Large width. Extends up to `large` breakpoint.
// .container--xlarge   - Xlarge width. Extends up to `xlarge` breakpoint.
// .container--xxlarge  - Xxlarge width. Extends up to `xxlarge` breakpoint.
// .container--centered - Centers container horizontally.
//
// Markup: objects/container/html/container.html
//
// Style guide: Objects.Container
.container {
  $size: map-get($container-sizes, $container-size);

  display: block;
  width: 100%;
  max-width: $size;

  @each $size, $width in $container-sizes {
    @if $size != $container-size {
      &--#{$size} {
        max-width: $width;
      }
    }
  }

  &--centered {
    margin-left: auto;
    margin-right: auto;
  }
}