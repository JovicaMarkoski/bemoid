/** @define media */

@import 'variables';

// Media
//
// Standard media object component for displaying a side element alongside with the content.
//
// .media--reversed - Flip side element and content.
// .media--stacked  - Stack side element and content on top of each other.
// .media--stackable - Makes side element and content to stack on specified breakpoint defined in `$media-stackable` variable.
//
// Markup: components/media/html/media.html
//
// Style guide: Objects.Media
.media {
  $this: &;

  display: flex;

  @each $breakpoint, $width in $media-gutters {
    @include breakpoint($breakpoint up) {
      margin: -#{$width / 2};
    }
  }

  &__side,
  &__body {
    @each $breakpoint, $width in $media-gutters {
      @include breakpoint($breakpoint up) {
        padding: $width / 2;
      }
    }
  }

  // Media Side
  //
  // Element for holding media item of the media object.
  //
  // .media__side--middle - Align side to the middle oth the media object.
  // .media__side--bottom - Align side to the bottom oth the media object.
  //
  // Markup: components/media/html/media__side.html
  //
  // Style guide: Objects.Media.Side
  &__side {
    flex: 0 1 auto;
    max-width: 100%;

    &--middle {
      align-self: center;

      #{$this}__image {
        vertical-align: middle;
      }
    }

    &--bottom {
      align-self: flex-end;

      #{$this}__image {
        vertical-align: text-bottom;
      }
    }
  }

  // Media Body
  //
  // Element for holding content of the media object.
  //
  // .media__body--middle - Align body to the middle oth the media object.
  // .media__body--bottom - Align body to the bottom oth the media object.
  //
  // Markup: components/media/html/media__body.html
  //
  // Style guide: Objects.Media.Body
  &__body {
    flex: 1;
    max-width: 100%;

    &--middle {
      align-self: center;
    }

    &--bottom {
      align-self: flex-end;
    }
  }

  // Media Image
  //
  // Image element of media object.
  //
  // Style guide: Objects.Media.Image
  &__image {
    display: block;
    max-width: 100%;
    height: auto;
    vertical-align: text-top;
  }

  &--stacked {
    flex-direction: column;
  }

  &--stackable {
    @include breakpoint($grid-stackable down) {
      flex-direction: column;
    }
  }

  &--reversed {
    flex-direction: row-reverse;

    &#{$this}--stacked {
      flex-direction: column-reverse;
    }

    &#{$this}--stackable {
      @include breakpoint($grid-stackable down) {
        flex-direction: column-column;
      }
    }
  }
}