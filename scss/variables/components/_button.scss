////
/// @group Button
////

/// Collection of button variants.
///
/// @type {Map}
/// @prop {Map} white
/// @prop {Map} black
/// @prop {Map} primary
/// @prop {Map} secondary
/// @prop {Map} complementary
/// @prop {Map} success
/// @prop {Map} warning
/// @prop {Map} info
/// @prop {Map} error
$button-variants: (
    neutral: (
        'color': get-color(black),
        'background-color': get-color(light-gray) darken(get-color(light-gray), 10%),
    ),
    white: (
        'color': get-color(white),
        'background-color': get-color(white) get-color(primary),
    ),
    black: (
        'color': get-color(white),
        'background-color': get-color(black) darken(get-color(black), 10%),
    ),
    primary: (
        'color': get-color(white),
        'background-color': get-color(primary) darken(get-color(primary), 10%),
    ),
    secondary: (
        'color': get-color(white),
        'background-color': get-color(secondary) darken(get-color(secondary), 10%),
    ),
    complementary: (
        'color': get-color(white),
        'background-color': get-color(complementary) darken(get-color(complementary), 10%),
    ),
    success: (
        'color': get-color(white),
        'background-color': get-color(success) darken(get-color(success), 10%),
    ),
    warning: (
        'color': get-color(black),
        'background-color': get-color(warning) darken(get-color(warning), 10%),
    ),
    info: (
        'color': get-color(white),
        'background-color': get-color(info) darken(get-color(info), 10%),
    ),
    error: (
        'color': get-color(white),
        'background-color': get-color(error) darken(get-color(error), 10%),
    ),
) !default;

/// Collection of hollowed button variants.
///
/// @type {Map}
/// @prop {Map} white
/// @prop {Map} black
/// @prop {Map} primary
/// @prop {Map} secondary
/// @prop {Map} complementary
/// @prop {Map} success
/// @prop {Map} warning
/// @prop {Map} info
/// @prop {Map} error
$button-hollow-variants: (
    neutral: (
        'color': get-color(black),
        'border-color': get-color(light-gray) darken(get-color(light-gray), 10%),
    ),
    white: (
        'color': get-color(white) get-color(white),
        'border-color': get-color(white) get-color(primary),
    ),
    black: (
        'color': get-color(black) get-color(white),
        'border-color': get-color(black) darken(get-color(black), 10%),
    ),
    primary: (
        'color': get-color(primary) get-color(white),
        'border-color': get-color(primary) darken(get-color(primary), 10%),
    ),
    secondary: (
        'color': get-color(secondary) get-color(white),
        'border-color': get-color(secondary) darken(get-color(secondary), 10%),
    ),
    complementary: (
        'color': get-color(complementary) get-color(white),
        'border-color': get-color(complementary) darken(get-color(complementary), 10%),
    ),
    success: (
        'color': get-color(success) get-color(white),
        'border-color': get-color(success) darken(get-color(success), 10%),
    ),
    warning: (
        'color': get-color(warning) get-color(black),
        'border-color': get-color(warning) darken(get-color(warning), 10%),
    ),
    info: (
        'color': get-color(info) get-color(white),
        'border-color': get-color(info) darken(get-color(info), 10%),
    ),
    error: (
        'color': get-color(error) get-color(white),
        'border-color': get-color(error) darken(get-color(error), 10%),
    ),
) !default;

/// Collection of button sizes.
///
/// @type {Map}
/// @prop {Map} xsmall
/// @prop {Map} small
/// @prop {Map} large
/// @prop {Map} xlarge
$button-sizes: (
    xsmall: (
        'font-size': em(12px)
    ),
    small: (
        'font-size': em(14px)
    ),
    medium: (
        'font-size': em(16px),
        'padding': get-space(small) get-space(large)
    ),
    large: (
        'font-size': em(18px)
    ),
    xlarge: (
        'font-size': em(21px)
    ),
) !default;

/// Default button size.
///
/// @type {Keyword}
$button-size: medium !default;

/// Default button variant.
///
/// @type {Keyword}
$button-variant: neutral !default;

/// Button text font weight.
///
/// @type {number|keyword}
$button-weight: 400 !default;

/// Button text align.
///
/// @type {Keyword}
$button-align: center !default;

/// Button border radius.
///
/// @type {Value}
$button-radius: get-radius(xsmall) !default;

/// Button transition settings.
///
/// @type {Values}
$button-transition: border .2s ease, color .2s ease, background .2s ease, box-shadow .3s ease !default;

/// Button box shadow.
///
/// @type {Value}
$button-shadow: get-elevator(1) !default;

/// Button box shadow on hover.
///
/// @type {Value}
$button-hover-shadow: get-elevator(2) !default;

/// Side paddings value for wide button.
///
/// @type {Value}
$button-wide-padding: em(40px) !default;

/// Opacity of the disabled button.
///
/// @type {Number}
$button-disabled-opacity: 0.5 !default;

/// Default hollowed button variant.
///
/// @type {Keyword}
$button-hollow-variant: neutral !default;

/// Outline width of the hollow button.
///
/// @type {Value}
$button-hollow-border: 1px !default;

/// Backgound color of the hollow button.
///
/// @type {Color}
$button-hollow-background: transparent !default;

/// Button's cover transition settings.
///
/// @type {Values}
$button-cover-transition: all 300ms ease !default;