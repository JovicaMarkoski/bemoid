////
/// @group Tag
/// @define tag
////

/// Tag font size.
///
/// @type {Value|Values}
$tag-font-size: em(14px) !default;

/// Tag text color.
///
/// @type {Color}
$tag-color: get-color(black) !default;

/// Tag background color.
///
/// @type {Color}
$tag-background: get-color(light-gray) !default;

/// Tag padding size.
///
/// @type {Value|Values}
$tag-padding: get-space(medium) !default;

/// Tag border radius size.
///
/// @type {Value|Values}
$tag-radius: get-radius(xsmall) !default;

/// Tag transition settings.
///
/// @type {Values}
$tag-transition: border .2s ease, color .2s ease, background .2s ease, box-shadow .3s ease !default;

/// Tag box shadow.
///
/// @type {Value}
$tag-shadow: get-elevator(1) !default;

/// Tag background color on hover.
///
/// @type {Color}
$tag-hover-background: darken(get-color(light-gray), 10%) !default;

/// Tag box shadow on hover.
///
/// @type {Value}
$tag-hover-shadow: get-elevator(2) !default;

// Tag
//
// Desc
//
// Markup: tag.html
//
// Style guide: Components.Tag
.tag {
	$this: #{&};

	display: inline-block;
	float: left;
	text-decoration: none;
	line-height: 1;

	color: $tag-color;
	font-size: $tag-font-size;
	box-shadow: $tag-shadow;
	border-radius: $tag-radius;
	background-color: $tag-background;
	transition: $tag-transition;

	@at-root {
		a#{$this} {
			&:hover {
				background-color: $tag-hover-background;
				box-shadow: $tag-hover-shadow;
			}
		}
	}

	// Tag Image
	//
	// Desc
	//
	// Markup: tag__image.html
	//
	// Style guide: Components.Tag.Image
	&__image {
		$offset: nth($tag-padding, length($tag-padding));

		height: calc(1em + #{$offset * 2});
	}

	&__body {
		display: inline-flex;
		align-items: center;
		padding: $tag-padding;
	}
}